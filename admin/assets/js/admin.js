// Generated by CoffeeScript 1.8.0
(function() {
  jQuery((function(_this) {
    return function($) {
      return _this.MgzCreateForm = (function() {
        function MgzCreateForm() {
          this.selectedIds || (this.selectedIds = []);
          $.ajax({
            url: 'options-general.php?page=remag&json=y',
            dataType: 'json'
          }).done((function(_this) {
            return function(data) {
              _this.articleList = data.posts;
              return _this.showPick();
            };
          })(this));
        }

        MgzCreateForm.prototype.showPick = function() {
          MgzModal.displayOrReplace(ecoTemplates['pick_articles']({
            articles: this.articleList,
            selected: this.selectedIds
          }));
          return $('.mgz-modal-next').click((function(_this) {
            return function() {
              _this.selectedIds = $('.mgz-modal input[type=checkbox]:checked').toArray().map(function(el) {
                return $(el).data('id');
              });
              if (_this.selectedIds.length === 0) {
                return MgzModal.displayError('You must select at least one article');
              } else {
                return _this._dataFor(_this.selectedIds).done(function(data) {
                  _this.articleData = data;
                  return _this.showName();
                });
              }
            };
          })(this));
        };

        MgzCreateForm.prototype.showName = function() {
          MgzModal.displayOrReplace(ecoTemplates['name_issue']({
            articles: this.articleData
          }));
          $('.mgz-modal-back').click((function(_this) {
            return function() {
              return _this.showPick();
            };
          })(this));
          return $('.mgz-modal form').submit((function(_this) {
            return function(e) {
              var el, issue_id;
              _this.title = $('.mgz-modal input#mgz-issue-title').val();
              if (_this.title.length === 0) {
                MgzModal.displayError('Title canâ€™t be blank');
                return false;
              }
              MgzModal.clearError();
              if (issue_id = _this.submit()) {
                MgzModal.hide();
                mgz_adminPage.render();
                el = $(e.currentTarget);
                el.attr('method', 'POST');
                el.attr('action', mgz_admin_url + '/login');
                el.attr('target', '_blank');
                el.find("input[name='login[username]']").val(mgz_settings.user.username);
                el.find("input[name='login[password]']").val(mgz_settings.user.password);
                el.find("input[name=redirect]").val("issues/" + issue_id);
                return true;
              } else {
                return false;
              }
            };
          })(this));
        };

        MgzCreateForm.prototype.submit = function() {
          var result;
          result = $.ajax({
            url: mgz_api_url + '/magazines/' + mgz_settings.magazine.identifier + '/issues',
            type: 'POST',
            async: false,
            dataType: 'json',
            data: {
              username: mgz_settings.user.username,
              password: mgz_settings.user.password,
              issue: JSON.stringify({
                title: this.title,
                articles: this.articleData.map(function(a) {
                  return {
                    id: a.ID,
                    title: a.post_title,
                    content: a.post_content,
                    metadata: a.meta,
                    url: a.permalink
                  };
                })
              })
            }
          });
          if (result.status === 200) {
            return result.responseJSON.issue_id;
          } else {
            MgzModal.displayError('An error has occured. Please try again.');
            return false;
          }
        };

        MgzCreateForm.prototype._dataFor = function(ids) {
          return $.ajax({
            url: 'options-general.php?page=remag&json=y',
            dataType: 'json',
            async: false,
            type: 'POST',
            data: {
              ids: ids
            }
          });
        };

        return MgzCreateForm;

      })();
    };
  })(this));

}).call(this);


// Generated by CoffeeScript 1.8.0
(function() {
  jQuery((function(_this) {
    return function($) {
      return _this.MgzModal = (function() {
        var modalContainer;

        function MgzModal() {}

        modalContainer = '.mgz-page';

        MgzModal.display = function(html, options) {
          if (options == null) {
            options = {};
          }
          if (MgzModal.isVisible) {
            return;
          }
          $('body').addClass('mgz-modal-lock');
          $(modalContainer).append(MgzModal._template(html, options));
          $('.mgz-modal-cancel').click(MgzModal.hide);
          return MgzModal.isVisible = true;
        };

        MgzModal.replace = function(html) {
          if (!MgzModal.isVisible) {
            return;
          }
          $('.mgz-modal').html(html);
          return $('.mgz-modal-cancel').click(MgzModal.hide);
        };

        MgzModal.displayOrReplace = function(html, options) {
          if (options == null) {
            options = {};
          }
          if (MgzModal.isVisible) {
            return MgzModal.replace(html);
          } else {
            return MgzModal.display(html, options);
          }
        };

        MgzModal.hide = function() {
          if (!MgzModal.isVisible) {
            return;
          }
          $('.mgz-modal-container').addClass('animate-close');
          setTimeout((function() {
            $('.mgz-modal-container').remove();
            $('body').removeClass('mgz-modal-lock');
            return MgzModal.isVisible = false;
          }), 400);
          return false;
        };

        MgzModal.visible = function() {
          return MgzModal.isVisible || false;
        };

        MgzModal.displayError = function(error) {
          if (!MgzModal.isVisible) {
            return;
          }
          MgzModal.clearError();
          return $('.mgz-modal').find('h1').after('<div class="alert alert-danger"><p>' + error + '</p></div>');
        };

        MgzModal.clearError = function() {
          if (!MgzModal.isVisible) {
            return;
          }
          return $('.mgz-modal').find('div.alert.alert-danger').remove();
        };

        MgzModal._template = function(html, _arg) {
          var narrow;
          narrow = _arg.narrow;
          return '<div class="mgz-modal-container animate-open"><div class="mgz-modal ' + (narrow ? 'narrow' : '') + '">' + html + '</div></div>';
        };

        return MgzModal;

      })();
    };
  })(this));

}).call(this);


// Generated by CoffeeScript 1.8.0
(function() {
  jQuery((function(_this) {
    return function($) {
      return _this.MgzSettings = (function() {
        MgzSettings.prototype.magazine = {
          name: null,
          identifier: null,
          app_store_id: null,
          google_play_id: null
        };

        MgzSettings.prototype.user = {
          username: null,
          password: null
        };

        MgzSettings.prototype.smartbanner = null;

        function MgzSettings() {
          var json, result;
          result = $.ajax({
            url: 'options-general.php?page=remag&mode=settings',
            async: false
          });
          if (json = result.responseJSON) {
            this.magazine = json.magazine, this.user = json.user, this.smartbanner = json.smartbanner;
          }
        }

        MgzSettings.prototype.replace = function(_arg) {
          this.magazine = _arg.magazine, this.user = _arg.user;
        };

        MgzSettings.prototype.save = function() {
          return $.ajax({
            url: 'options-general.php?page=remag&mode=settings',
            type: 'POST',
            data: {
              data: JSON.stringify({
                magazine: this.magazine,
                user: this.user,
                smartbanner: this.smartbanner
              })
            }
          });
        };

        return MgzSettings;

      })();
    };
  })(this));

}).call(this);


// Generated by CoffeeScript 1.8.0
(function() {
  jQuery((function(_this) {
    return function($) {
      return _this.MgzSignupForm = (function() {
        function MgzSignupForm() {
          $.ajax({
            url: 'options-general.php?page=remag&json=y',
            dataType: 'json'
          }).done((function(_this) {
            return function(data) {
              var blogName;
              blogName = data.blog_title;
              return _this.showForm(blogName);
            };
          })(this));
        }

        MgzSignupForm.prototype.showForm = function(magazineName) {
          MgzModal.display(ecoTemplates['signup']({
            magazineName: magazineName
          }), {
            narrow: true
          });
          return $('.mgz-modal form').submit((function(_this) {
            return function() {
              var fields, magazineJson, name, password, passwordConfirmation, result, username, _ref;
              MgzModal.clearError();
              fields = _this.getValidatedFields();
              if (!fields) {
                return false;
              }
              name = fields[0], username = fields[1], password = fields[2], passwordConfirmation = fields[3];
              result = $.ajax({
                url: mgz_api_url + '/magazines',
                type: 'POST',
                async: false,
                dataType: 'json',
                data: {
                  magazine: {
                    name: name
                  },
                  user: {
                    username: username,
                    password: password
                  },
                  wordpress_url: location.href.match(/^(.*)wp-admin/)[1]
                }
              });
              if (result.status === 200) {
                magazineJson = result.responseJSON.magazine;
                _this.saveAndClose({
                  magazine: {
                    name: name,
                    id: magazineJson.id,
                    identifier: magazineJson.identifier
                  },
                  user: {
                    username: username,
                    password: password
                  }
                });
              } else {
                MgzModal.displayError(((_ref = result.responseJSON) != null ? _ref.error : void 0) || 'An error has occured. Please try again.');
              }
              return false;
            };
          })(this));
        };

        MgzSignupForm.prototype.saveAndClose = function(settings) {
          mgz_settings.replace(settings);
          mgz_settings.save();
          MgzModal.hide();
          return setTimeout((function() {
            return mgz_adminPage.render(true);
          }), 400);
        };

        MgzSignupForm.prototype.getValidatedFields = function() {
          var getField, name, password, passwordConfirmation, username;
          getField = function(id) {
            return $(".mgz-modal input#" + id).val().trim();
          };
          name = getField('mgz-magazine-name');
          username = getField('mgz-user-username');
          password = getField('mgz-user-password');
          passwordConfirmation = getField('mgz-user-password-confirmation');
          if (name.length === 0) {
            MgzModal.displayError("Magazine name canâ€™t be blank");
          } else if (username.length === 0) {
            MgzModal.displayError("Email address canâ€™t be blank");
          } else if (password.length === 0) {
            MgzModal.displayError("Password canâ€™t be blank");
          } else if (passwordConfirmation.length === 0) {
            MgzModal.displayError("Password confirmation canâ€™t be blank");
          } else if (password !== passwordConfirmation) {
            MgzModal.displayError("Passwords donâ€™t match");
          } else {
            return [name, username, password, passwordConfirmation];
          }
          return null;
        };

        return MgzSignupForm;

      })();
    };
  })(this));

}).call(this);


(function() {
  this.ecoTemplates || (this.ecoTemplates = {});
  this.ecoTemplates["homepage"] = function(__obj) {
    if (!__obj) __obj = {};
    var __out = [], __capture = function(callback) {
      var out = __out, result;
      __out = [];
      callback.call(this);
      result = __out.join('');
      __out = out;
      return __safe(result);
    }, __sanitize = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else if (typeof value !== 'undefined' && value != null) {
        return __escape(value);
      } else {
        return '';
      }
    }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
    __safe = __obj.safe = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else {
        if (!(typeof value !== 'undefined' && value != null)) value = '';
        var result = new String(value);
        result.ecoSafe = true;
        return result;
      }
    };
    if (!__escape) {
      __escape = __obj.escape = function(value) {
        return ('' + value)
          .replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;')
          .replace(/"/g, '&quot;');
      };
    }
    (function() {
      (function() {
        if (this.loggedIn) {
          __out.push('\n  <div id="mgz-homepage-userinfo">\n    <strong>');
          __out.push(__sanitize(this.settings.magazine.name));
          __out.push('</strong><br>\n    ');
          __out.push(__sanitize(this.settings.user.username));
          __out.push('\n  </div>\n');
        }
      
        __out.push('\n\n');
      
        if (this.loggedIn) {
          __out.push('\n  \n  <img class="mgz-logo" src="');
          __out.push(__sanitize(this.assets_url));
          __out.push('/images/remag.png">\n\n  <div id="mgz-homepage-buttons">\n    <button class="btn btn-primary btn-lg" id="mgz-create-issue-button"><span>+</span> Create a new issue</button>\n    <form id="mgz-see-all-issues-form" action="javascript:">\n      <button type="submit" class="btn btn-default btn-lg" id="mgz-see-all-issues-button">See all issues</button>\n      <input type="hidden" name="login[username]">\n      <input type="hidden" name="login[password]">\n      <input type="hidden" name="redirect">\n    </form>\n  </div>\n\n  <div id="mgz-preview-box">\n    <h1>Preview your magazine</h1>\n    <h2>It\'s really easy!</h2>\n\n    <p>Just download our Preview app from <strong>App Store</strong> (if you\'re on iPhone or iPad) or <strong>Play Store</strong> (if you\'re using Android) and log in with the credentials you used on signup.</p>\n    <div id="mgz-store-buttons">\n      <a href="https://itunes.apple.com/us/app/remag-preview/id962331255?ls=1&mt=8">\n        <img class="store-button" src="');
          __out.push(__sanitize(this.assets_url));
          __out.push('/images/app_store.png">\n      </a>\n      <a href="https://play.google.com/store/apps/details?id=me.remag.preview">\n        <img class="store-button" src="');
          __out.push(__sanitize(this.assets_url));
          __out.push('/images/play_store.png">\n      </a>\n    </div>\n  </div>\n  \n');
        } else {
          __out.push('\n  <img class="mgz-logo" src="');
          __out.push(__sanitize(this.assets_url));
          __out.push('/images/remag.png">\n  \n  <p id="mgz-homepage-pitch">Remag is the easiest way to publish a digital magazine for iPad, iPhone and Android. <br />\n  Right from your WordPress blog!</p>\n\n  <img class="mgz-devices" src="');
          __out.push(__sanitize(this.assets_url));
          __out.push('/images/devices.png">\n  \n  <button class="btn btn-primary btn-lg" id="mgz-signup-button">Letâ€™s get started!</button>\n  \n');
        }
      
      }).call(this);
      
    }).call(__obj);
    __obj.safe = __objSafe, __obj.escape = __escape;
    return __out.join('');
  };
}).call(this);


(function() {
  this.ecoTemplates || (this.ecoTemplates = {});
  this.ecoTemplates["name_issue"] = function(__obj) {
    if (!__obj) __obj = {};
    var __out = [], __capture = function(callback) {
      var out = __out, result;
      __out = [];
      callback.call(this);
      result = __out.join('');
      __out = out;
      return __safe(result);
    }, __sanitize = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else if (typeof value !== 'undefined' && value != null) {
        return __escape(value);
      } else {
        return '';
      }
    }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
    __safe = __obj.safe = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else {
        if (!(typeof value !== 'undefined' && value != null)) value = '';
        var result = new String(value);
        result.ecoSafe = true;
        return result;
      }
    };
    if (!__escape) {
      __escape = __obj.escape = function(value) {
        return ('' + value)
          .replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;')
          .replace(/"/g, '&quot;');
      };
    }
    (function() {
      (function() {
        var article, _i, _len, _ref;
      
        __out.push('<form action="javascript:">\n  <h1>Name the issue</h1>\n\n  <p>Pick a good title for your new issue.</p>\n\n  <div class="form-group">\n    <input class="form-control" id="mgz-issue-title" placeholder="Issue title" autofocus>\n  </div>\n\n  <p>It will contain the following articles. Youâ€™ll be able to reordem them later.</p>\n\n  <ul class="mgz-selected-articles">\n    ');
      
        _ref = this.articles;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          article = _ref[_i];
          __out.push('\n    <li>');
          __out.push(__sanitize(article.post_title));
          __out.push('\n    ');
        }
      
        __out.push('\n  </ul>\n\n  <div class="mgz-buttons">\n    <a class="btn btn-default btn-lg mgz-modal-back">Â« Back</a>\n    <button type="submit" class="btn btn-primary btn-lg pull-right">Create</button>\n  </div>\n  \n  <input type="hidden" name="login[username]">\n  <input type="hidden" name="login[password]">\n  <input type="hidden" name="redirect">\n</form>');
      
      }).call(this);
      
    }).call(__obj);
    __obj.safe = __objSafe, __obj.escape = __escape;
    return __out.join('');
  };
}).call(this);


(function() {
  this.ecoTemplates || (this.ecoTemplates = {});
  this.ecoTemplates["pick_articles"] = function(__obj) {
    if (!__obj) __obj = {};
    var __out = [], __capture = function(callback) {
      var out = __out, result;
      __out = [];
      callback.call(this);
      result = __out.join('');
      __out = out;
      return __safe(result);
    }, __sanitize = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else if (typeof value !== 'undefined' && value != null) {
        return __escape(value);
      } else {
        return '';
      }
    }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
    __safe = __obj.safe = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else {
        if (!(typeof value !== 'undefined' && value != null)) value = '';
        var result = new String(value);
        result.ecoSafe = true;
        return result;
      }
    };
    if (!__escape) {
      __escape = __obj.escape = function(value) {
        return ('' + value)
          .replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;')
          .replace(/"/g, '&quot;');
      };
    }
    (function() {
      (function() {
        var article, _i, _len, _ref;
      
        __out.push('<h1>Pick articles</h1>\n\n<p>Select articles to include in your new issue</p>\n\n<div class="mgz-article-picker-list">\n  ');
      
        _ref = this.articles;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          article = _ref[_i];
          __out.push('\n  <label>\n    <input type="checkbox" data-id="');
          __out.push(__sanitize(article.ID));
          __out.push('" ');
          if (this.selected.indexOf(article.ID) >= 0) {
            __out.push(__sanitize("checked"));
          }
          __out.push('>\n    <span class="mgz-article-title">');
          __out.push(__sanitize(article.title));
          __out.push('</span>\n    \n    ');
          if (article.status !== "publish") {
            __out.push('\n      <span class="mgz-article-status"> â€” ');
            __out.push(__sanitize(article.status));
            __out.push('</span>\n    ');
          }
          __out.push('\n  </label>\n  ');
        }
      
        __out.push('\n</div>\n\n<div class="mgz-buttons">\n  <button class="btn btn-default btn-lg mgz-modal-cancel">Cancel</button>\n  <button class="btn btn-primary btn-lg pull-right mgz-modal-next">Next Â»</button>\n</div>');
      
      }).call(this);
      
    }).call(__obj);
    __obj.safe = __objSafe, __obj.escape = __escape;
    return __out.join('');
  };
}).call(this);


(function() {
  this.ecoTemplates || (this.ecoTemplates = {});
  this.ecoTemplates["signup"] = function(__obj) {
    if (!__obj) __obj = {};
    var __out = [], __capture = function(callback) {
      var out = __out, result;
      __out = [];
      callback.call(this);
      result = __out.join('');
      __out = out;
      return __safe(result);
    }, __sanitize = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else if (typeof value !== 'undefined' && value != null) {
        return __escape(value);
      } else {
        return '';
      }
    }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
    __safe = __obj.safe = function(value) {
      if (value && value.ecoSafe) {
        return value;
      } else {
        if (!(typeof value !== 'undefined' && value != null)) value = '';
        var result = new String(value);
        result.ecoSafe = true;
        return result;
      }
    };
    if (!__escape) {
      __escape = __obj.escape = function(value) {
        return ('' + value)
          .replace(/&/g, '&amp;')
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;')
          .replace(/"/g, '&quot;');
      };
    }
    (function() {
      (function() {
        __out.push('<form action="javascript:">\n  <h1>Set up your magazine</h1>\n\n  <div class="form-group">\n    <label>Magazine name</label>\n    <input class="form-control" id="mgz-magazine-name" value="');
      
        __out.push(__sanitize(this.magazineName));
      
        __out.push('" autofocus>\n  </div>\n\n  <p>Youâ€™ll need the credentials below to preview your magazine on an iPhone, iPad or Android device.</p>\n\n  <div class="form-group">\n    <input type="email" class="form-control" placeholder="Email address" id="mgz-user-username">\n  </div>\n\n  <div class="form-group">\n    <input type="password" class="form-control" placeholder="Password" id="mgz-user-password">\n  </div>\n\n  <div class="form-group">\n    <input type="password" class="form-control" placeholder="Confirm password" id="mgz-user-password-confirmation">\n  </div>\n\n  <div class="mgz-buttons">\n    <button type="submit" class="btn btn-primary btn-lg center-block mgz-modal-next">Sign up</button>\n  </div>\n</form>');
      
      }).call(this);
      
    }).call(__obj);
    __obj.safe = __objSafe, __obj.escape = __escape;
    return __out.join('');
  };
}).call(this);


// Generated by CoffeeScript 1.8.0
(function() {
  jQuery((function(_this) {
    return function($) {
      var debug;
      _this.MgzAdminPage = (function() {
        function MgzAdminPage() {}

        MgzAdminPage.prototype.render = function(firstTime) {
          var loggedIn, settings;
          settings = mgz_settings;
          loggedIn = settings.user.username && settings.user.password;
          $('.mgz-page').html(ecoTemplates['homepage']({
            settings: settings,
            loggedIn: loggedIn,
            assets_url: mgz_assets_url
          }));
          $('.mgz-page').toggleClass('first-time', !!firstTime);
          $('#mgz-create-issue-button').click((function(_this) {
            return function() {
              return new MgzCreateForm;
            };
          })(this));
          $('#mgz-signup-button').click((function(_this) {
            return function() {
              return new MgzSignupForm;
            };
          })(this));
          return $('#mgz-see-all-issues-form').submit(function(e) {
            var el;
            el = $(e.currentTarget);
            el.attr('method', 'POST');
            el.attr('action', mgz_admin_url + '/login');
            el.attr('target', '_blank');
            el.find("input[name='login[username]']").val(mgz_settings.user.username);
            el.find("input[name='login[password]']").val(mgz_settings.user.password);
            el.find("input[name=redirect]").val("magazines/" + mgz_settings.magazine.id);
            return true;
          });
        };

        MgzAdminPage.prototype.updateSettings = function() {
          if (!mgz_settings.user.username || !mgz_settings.user.password) {
            return;
          }
          console.log('Fetching magazine info');
          return $.ajax({
            url: mgz_api_url + '/magazines/' + mgz_settings.magazine.identifier + '.json',
            dataType: 'json',
            data: {
              username: mgz_settings.user.username,
              password: mgz_settings.user.password
            }
          }).done((function(_this) {
            return function(data) {
              var smartbannerReady;
              mgz_settings.magazine.name = data.name;
              mgz_settings.magazine.app_store_id = data.app_store_id;
              mgz_settings.magazine.google_play_id = data.google_play_id;
              smartbannerReady = data.app_status === 'published' && data.app_store_id && data.google_play_id;
              return mgz_settings.save();
            };
          })(this)).fail((function(_this) {
            return function(_, status) {
              return console.log(status);
            };
          })(this));
        };

        return MgzAdminPage;

      })();
      debug = false;
      if (debug) {
        window.mgz_api_url = 'http://api.pm.dev';
        window.mgz_admin_url = 'http://admin.pm.dev';
      } else {
        window.mgz_api_url = 'https://api.remag.me';
        window.mgz_admin_url = 'https://admin.remag.me';
      }
      window.mgz_assets_url = location.href.match(/^(.*)wp-admin/)[1] + 'wp-content/plugins/remag/admin/assets';
      window.mgz_adminPage = new MgzAdminPage;
      window.mgz_settings = new MgzSettings;
      mgz_adminPage.render();
      return mgz_adminPage.updateSettings();
    };
  })(this));

}).call(this);
